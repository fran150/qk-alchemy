define("text!qk-alchemy/components/layout/navbar.component.html",[],function(){return'<quark-component>\n    <div class="navbar navbar-default navbar-fixed-top" role="navigation" data-bind="onBind: init">\n        <div class="container-fluid">\n            <div class="navbar-header">\n                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\n                    <span class="sr-only">Desplegar menu</span>\n                    <span class="icon-bar"></span>\n                    <span class="icon-bar"></span>\n                    <span class="icon-bar"></span>\n                </button>\n                    <a data-bind="attr: { href: url }" class="navbar-brand">\n                        <!-- ko if: visibleIcon -->\n                            <!-- ko ifnot: iconType() == \'font\' -->\n                                <img data-bind="attr: { src: iconUrl }" />\n                            <!-- /ko -->\n                            <!-- ko if: iconType() == \'font\' -->\n                                <span class="font-icon" data-bind="css: iconUrl"></span>\n                            <!-- /ko -->\n                        <!-- /ko -->\n                        <span data-bind="text: model.brand"></span>\n                    </a>\n            </div>\n            <div class="collapse navbar-collapse">\n                <ul class="nav navbar-nav navbar-left">\n                    <!-- ko content: \'left\', virtual: true --><!-- /ko -->\n                </ul>\n\n                <ul class="nav navbar-nav navbar-right">\n                    <!-- ko content: \'right\', virtual: true --><!-- /ko -->\n                </ul>\n            </div>\n        </div>\n    </div>\n</quark-component>\n'}),define("qk-alchemy/lib/utils",["quark","knockout"],function(n,o){function e(){var o=this;this.findContainer=function(e,t){var a=e.$container,i=!1;if(n.isArray(t))for(var r=0;r<t.length;r++){var c=t[r];if(a instanceof c){i=!0;break}}else i=a instanceof t;if(i)return a;var s=e.$parentContext;return s?o.findContainer(s,t):void 0}}return new e}),define("text!qk-alchemy/components/layout.component.html",[],function(){return"<!-- quark-component -->\n    <!-- ko content -->\n    <!-- /ko -->\n<!-- /ko -->\n"}),define("qk-alchemy/components/layout.component",["quark","knockout","text!./layout.component.html"],function(n,o,e){function t(e,t,a){function i(){var o=c.sidebarSize(),e=c.minSidebarSize(),t=$(window).width()/2;n.isNumeric(e)&&e>0&&o<e&&c.sidebarSize(e),o<0&&c.sidebarSize(0),o>t&&c.sidebarSize(t)}function r(n){n?$(document).css("margin-top","50px"):$(document).css("margin-top","auto")}var c=this;this.hasNavbar=o.observable(!1),this.hasSidebar=o.observable(!1),n.parameters({sidebarSize:o.observable(90),containerSize:o.observable("md"),minSidebarSize:o.observable(20),containerFluid:o.observable(!0)},e,this),a.initComponent=function(){i(c.sidebarSize()),r(c.hasNavbar())};var s={sidebarSize:c.sidebarSize.subscribe(i),minSidebarSize:c.minSidebarSize.subscribe(i),hasNavbar:c.hasNavbar.subscribe(r)};t.dispose=function(){s.sidebarSize.dispose(),s.minSidebarSize.dispose(),s.hasNavbar.dispose()}}return n.component(t,e)}),define("qk-alchemy/components/layout/navbar.component",["knockout","quark","text!./navbar.component.html","qk-alchemy/lib/utils","../layout.component"],function(n,o,e,t,a){function i(e,i){var r,c=this;o.parameters({pageName:n.observable(),pageParams:n.observable(),brand:n.observable("Brand Name"),icon:n.observable()},e,this),i.init=function(n,o,e){var i=t.findContainer(e,a.modelType);if(!i)throw new Error("The navbar component must be used inside an al-layout component");(r=i.hasNavbar)(!0)},i.visibleIcon=n.pureComputed(function(){return o.isString(c.icon())},i),i.iconType=n.pureComputed(function(){var n=c.icon();if(o.isString(n)){if("url:"==n.substring(0,4))return"image";if("font:"==n.substring(0,5))return"font"}return"unknown"},i),i.iconUrl=n.pureComputed(function(){var n=i.iconType(),o=c.icon();return"image"==n?o.substring(4):"font"==n?o.substring(5):o},i),i.url=n.pureComputed(function(){var n=c.pageName(),e=c.pageParams();if(n)return"#"+o.routing.hash(n,e)}),this.dispose=function(){r(!1)}}return o.component(i,e)}),define("text!qk-alchemy/components/layout/navbar/button.component.html",[],function(){return'<!-- quark-component -->\n    <li data-bind="onBind: init,\n                   css: { active: model.active }">\n        <a href="#" data-bind="click: click">\n            <!-- ko if: model.iconFont -->\n                <span data-bind="css: model.iconFont"></span>&nbsp;\n            <!-- /ko -->\n            <!-- ko if: model.text -->\n                <span data-bind="text: model.text"></span>\n            <!-- /ko -->\n        </a>\n    </li>\n<!-- /quark-component -->\n'}),define("qk-alchemy/components/layout/navbar/button.component",["knockout","quark","text!./button.component.html","qk-alchemy/lib/utils","../navbar.component"],function(n,o,e,t,a){function i(e,i){var r=this;o.parameters({text:n.observable("Navbar Button"),iconFont:n.observable("glyphicon glyphicon-star"),active:n.observable(!1),onClick:function(){}},e,this),i.init=function(n,o,e){var i=t.findContainer(e,a.modelType);if(!i)throw new Error("This component must be used inside an al-layout-navbar component")},i.click=function(){o.call(r.onClick)}}return o.component(i,e)}),define("text!qk-alchemy/components/layout/navbar/dropdown.component.html",[],function(){return'<!-- quark-component -->\n    <li class="dropdown" data-bind="onBind: init, css: { active: model.active }">\n        <a href="#" class="dropdown-toggle" data-toggle="dropdown">\n            <!-- ko if: model.iconFont -->\n                <span data-bind="css: model.iconFont"></span>&nbsp;\n            <!-- /ko -->\n            <span data-bind="text: model.text"></span>\n            <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <!-- ko content: \'*\' -->\n            <!-- /ko -->\n        </ul>\n    </li>\n<!-- /quark-component -->\n'}),define("qk-alchemy/components/layout/navbar/dropdown.component",["knockout","quark","text!./dropdown.component.html","qk-alchemy/lib/utils","../navbar.component"],function(n,o,e,t,a){function i(e,i){o.parameters({iconFont:n.observable("glyphicon glyphicon-star"),text:n.observable("Dropdown"),active:n.observable(!1)},e,this),i.init=function(n,o,e){var i=t.findContainer(e,a.modelType);if(!i)throw new Error("This component must be used inside an al-layout-navbar component")}}return o.component(i,e)}),define("text!qk-alchemy/components/layout/navbar/dropdown/divider.component.html",[],function(){return'<!-- quark-component -->\n    <li data-bind="onBind: init" class="divider">\n    </li>\n<!-- /quark-component -->\n'}),define("qk-alchemy/components/layout/navbar/dropdown/divider.component",["knockout","quark","text!./divider.component.html","qk-alchemy/lib/utils","../dropdown.component"],function(n,o,e,t,a){function i(n,o){o.init=function(n,o,e){var i=t.findContainer(e,a.modelType);if(!i)throw new Error("This component must be used inside an al-layout-navbar-dropdown component")}}return o.component(i,e)}),define("text!qk-alchemy/components/layout/navbar/dropdown/header.component.html",[],function(){return'<!-- quark-component -->\n    <li data-bind="onBind: init, text: model.text" class="dropdown-header">\n    </li>\n<!-- /quark-component -->\n'}),define("qk-alchemy/components/layout/navbar/dropdown/header.component",["knockout","quark","text!./header.component.html","qk-alchemy/lib/utils","../dropdown.component"],function(n,o,e,t,a){function i(e,i){o.parameters({text:n.observable("Header")},e,this),i.init=function(n,o,e){var i=t.findContainer(e,a.modelType);if(!i)throw new Error("This component must be used inside an al-layout-navbar-dropdown component")}}return o.component(i,e)}),define("text!qk-alchemy/components/layout/navbar/dropdown/link.component.html",[],function(){return'<!-- quark-component -->\n    <li data-bind="onBind: init, css: { active: isActive, disabled: model.disabled }">\n        <a data-bind="attr: { href: url }">\n            <!-- ko if: model.iconFont -->\n                <span data-bind="css: model.iconFont"></span>&nbsp;\n            <!-- /ko -->\n\n            <span data-bind="text: model.text"></span>\n        </a>\n    </li>\n<!-- /quark-component -->\n'}),define("qk-alchemy/components/layout/navbar/dropdown/link.component",["knockout","quark","text!./link.component.html","qk-alchemy/lib/utils","../dropdown.component"],function(n,o,e,t,a){function i(e,i){function r(){var n=o.routing.current();return n==c.pageName()&&(s(!0),!0)}var c=this;o.parameters({pageName:n.observable(),pageParams:n.observable(),iconFont:n.observable("glyphicon glyphicon-star"),text:n.observable("Navbar Link"),disabled:n.observable(!1)},e,this);var s=n.observable();i.init=function(n,o,e){var i=t.findContainer(e,a.modelType);if(!i)throw new Error("This component must be used inside an al-layout-navbar-dropdown component");s=i.active,r()},i.url=n.pureComputed(function(){var n=c.pageName(),e=c.pageParams();if(n)return"#"+o.routing.hash(n,e)},i),i.isActive=n.computed(function(){return r()},i),i.dispose=function(){i.isActive.dispose()}}return o.component(i,e)}),define("text!qk-alchemy/components/layout/navbar/link.component.html",[],function(){return'<!-- quark-component -->\n    <li data-bind="onBind: init, css: { active: isActive }">\n        <a data-bind="attr: { href: url }">\n            <!-- ko if: model.iconFont -->\n                <span data-bind="css: model.iconFont"></span>&nbsp;\n            <!-- /ko -->\n\n            <span data-bind="text: model.text"></span>\n        </a>\n    </li>\n<!-- /quark-component -->\n'}),define("qk-alchemy/components/layout/navbar/link.component",["knockout","quark","text!./link.component.html","qk-alchemy/lib/utils","../navbar.component"],function(n,o,e,t,a){function i(e,i){var r=this;o.parameters({pageName:n.observable(),pageParams:n.observable(),iconFont:n.observable("glyphicon glyphicon-star"),text:n.observable("Navbar Link")},e,this),i.init=function(n,o,e){var i=t.findContainer(e,a.modelType);if(!(i instanceof a.modelType))throw new Error("This component must be used inside an al-layout-navbar component")},i.url=n.pureComputed(function(){var n=r.pageName(),e=r.pageParams();if(n)return"#"+o.routing.hash(n,e)},i),i.isActive=n.pureComputed(function(){var n=o.routing.current();return n==r.pageName()},i)}return o.component(i,e)});
